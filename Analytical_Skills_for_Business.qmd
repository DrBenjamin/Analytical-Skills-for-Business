---
title: "Analytical Skills for Business (WS 2025/26)"
subtitle: "Business Administration (M. A.)"
author: 
    name: "© Benjamin Gross"
    email: benjamin.gross@ext.hs-fresenius.de
    affiliation: 
      - Hochschule Fresenius - University of Applied Science
      - "Email: benjamin.gross@ext.hs-fresenius.de"
      - "Website: https://drbenjamin.github.io"
filters:
  - scripts/adjustTime.lua
abstract: |
    This document holds the course material for the Analytical Skills for Business course in the Master of Business Administration program. It discusses version control systems such as Git and GitHub for efficient team collaboration, offers an overview of no-code and low-code tools for data analytics including Tableau, Power BI, QlikView, makeML, PyCaret, RapidMiner, and KNIME, and introduces key programming languages such as R, Python, and SQL alongside essential programming concepts like syntax, libraries, variables, functions, objects, conditions, and loops. In addition, it covers working with modern development environments, including Unix-like systems, containers, APIs, Jupyter, and RStudio, and sets expectations for project submissions and evaluation.
format:
  html:
    embed-resources: true
    theme: cerulean
    toc: true
    toc-expand: 5
    toc-depth: 5
    number-sections: false
    number-depth: 5
  pdf:
    keep-tex: false
    include-in-header:
      text: |
        \usepackage[noblocks]{authblk}
        \renewcommand*{\Authsep}{, }
        \renewcommand*{\Authand}{, }
        \renewcommand*{\Authands}{, }
        \renewcommand\Affilfont{\small}
    documentclass: scrartcl
    classoption: [onecolumn, oneside, a4paper]
    linkcolor: blue
    urlcolor: blue
    filecolor: magenta
    citecolor: magenta
    colorlinks: true
    margin-left: "1in"
    margin-right: "1in"
    margin-top: "1in"
    margin-bottom: "1in"
    papersize: a4
    fig-cap-location: top
    toc: true
    toc-depth: 5
    number-sections: true
    lof: false
    lot: false
link-citations: true
csl: "./literature/apa.csl"
bibliography: ["./literature/essential_readings.bib", "./literature/further_readings.bib"]
suppress-bibliography: true
execute:
  enabled: true
  echo: false
---

\clearpage
# Introduction {#sec-intro}

Computer science is the study of computers and computation, spanning theoretical and algorithmic foundations, the design of hardware and software, and practical uses of computing to process information. It encompasses core areas such as

* algorithms and data structures
* computer architecture
* programming languages and software engineering
* databases and information systems
* networking and communications
* graphics and visualization
* human-computer interaction
* intelligent systems. 

The field draws on mathematics and engineering—using concepts like 

* binary representation
* Boolean logic
* complexity analysis

to reason about what can be computed and how efficiently.

Emerging in the 1960s as a distinct discipline, computer science now sits alongside computer engineering, information systems, information technology, and software engineering within the broader computing family. Its reach is inherently interdisciplinary, intersecting with domains from the natural sciences to business and the social sciences. Beyond technical advances, the discipline engages with societal and professional issues, including 

* reliability
* security
* privacy
* intellectual property 

in a networked world [@Britannica2025].

## Implementing version control systems

Version control systems are essential tools for managing code, tracking changes, and facilitating collaborative development in modern business analytics projects [@cetinkaya-Rundel2021]. These systems enable teams to work efficiently on shared codebases while maintaining a complete history of all modifications, ensuring reproducibility and accountability in data analysis workflows.

### Core Concepts

Version control systems provide systematic approaches to managing changes in documents, programs, and other collections of information:

- **Repository**: A central storage location containing all project files and their complete revision history
- **Commit**: A snapshot of the project at a specific point in time, representing a set of changes
- **Branch**: An independent line of development allowing parallel work on different features
- **Merge**: The process of integrating changes from different branches back together

![**Source:** *https://uidaholib.github.io/get-git/1why.html*](./topics/Introduction%20to%20tools%20of%20business%20analytics/git%20and%20Github/phd101212s.png)

### Git: Distributed Version Control

[**Git**](https://git-scm.com/) is a distributed version control system that tracks changes in files and coordinates work among multiple contributors. It was created by **Linus Torvalds** (creator of Linux) in 2005 and has since become the de facto standard for version control in software development. Key characteristics include:

**Local Repository**: Each user maintains a complete copy of the project history, enabling offline work and faster operations.

**Staging Area**: An intermediate area where changes are prepared before being committed to the repository.

**Branching and Merging**: Lightweight branching allows for experimental development without affecting the main codebase. Merging integrates changes from different branches. In Open Source projects often Pull Requests are used to propose and discuss changes before merging. In the coporate world often Merge Requests are used. There is a difference between merging and rebasing. Merging creates a new commit that combines the histories of two branches, while rebasing rewrites the commit history to create a linear sequence of changes as you see on the figure below.

![**Source:** *https://i0.wp.com/digitalvarys.com/wp-content/uploads/2020/03/Git-Merge-and-Rebase.png?resize=1536%2C843&ssl=1*](./topics/Introduction%20to%20tools%20of%20business%20analytics/git%20and%20Github/Git-Merge-and-Rebase.png)

**Distributed Workflow**: No single point of failure, as every user has a complete backup of the project.

### GitHub: Cloud-Based Collaboration Platform

[**GitHub**](https://github.com/) is a web-based hosting service for Git repositories that adds collaboration features and project management tools:

- **Remote Repositories**: Centralized storage accessible from anywhere with internet connectivity.
- **Pull Requests**: Structured code review process for integrating changes.
- **Issue Tracking**: Built-in project management for tracking bugs and feature requests.
- **Actions and CI/CD**: Automated workflows for testing and deployment.
- **Documentation**: Integrated wiki and README support for project documentation.

The combination of Git and GitHub creates a powerful ecosystem for collaborative analytics projects, ensuring code quality, facilitating peer review, and maintaining comprehensive project documentation [@GeeksforGeeksGit2024].

See also [Collaborating with Git and GitHub](https://hubchev.github.io/ds/91_git-github.html) by Prof. Dr. Huber about using git and Github for collaboration.

### Comparison of Git and GitHub

On this image you can see the integration of Git in GitHub:

![**Source:** *https://marce10.github.io/ciencia_reproducible/intro_a_git_y_github.html*](./topics/Introduction%20to%20tools%20of%20business%20analytics/git%20and%20Github/git-github.png)

### Business Analytics Applications

In business analytics contexts, version control systems provide:

- **Reproducible Analysis**: Complete tracking of analytical scripts and data processing steps
- **Collaborative Research**: Multiple analysts can work simultaneously on different aspects of projects
- **Model Versioning**: Systematic management of machine learning models and their evolution
- **Data Governance**: Audit trails for compliance and regulatory requirements
- **Backup and Recovery**: Protection against data loss and accidental modifications

### A lot of documentation available

For more coverage of version control concepts, implementation strategies, and best practices, see:

- **Theoretical Foundation**: [Introduction to Modern Statistics](./literature/Introduction_to_Modern_Statistics_2e.pdf) provides context on reproducible research practices and collaborative analytics [@cetinkaya-Rundel2021]
- **Git Resources**: [Git Cheat Sheet](./topics/Introduction%20to%20tools%20of%20business%20analytics/git%20and%20Github/git-cheat-sheet-education.pdf) offers quick reference for common Git commands
- **GitHub Documentation**: [GitHub Manual](./topics/Introduction%20to%20tools%20of%20business%20analytics/git%20and%20Github/github-manual.pdf) contains detailed guidance on platform features
- **Online Resources**: 
  - [GeeksforGeeks Git vs GitHub Guide](https://www.geeksforgeeks.org/git/difference-between-git-and-github/) provides practical comparisons and use cases [@GeeksforGeeksGit2024]
  - [Official GitHub Documentation](https://docs.github.com/en/get-started/start-your-journey/about-github-and-git) offers authoritative guidance on getting started [@GitHubDocs2024]

Understanding version control systems is fundamental for modern business analytics, enabling collaborative development, ensuring reproducibility, and maintaining professional standards in data science projects.

<!-- unfinished content
## Overview on no-code and low-code tools for data analytics

* Tableau
* Power BI
* QlikView
* makeML
* PyCaret
* Rapidminer
* KNIME

## Overview on Programming languages

* R
* Phyton
* SQL

## Elements of programming languages

* Syntax
* libraries
* variables
* functions
* objects
* conditions
* loops

## Development environments

* Unix-like systems
* containers
* APIs 
* Jupyter
* RStudio
-->

\newpage
# Descriptive statistics

Descriptive statistics summarizes and presents the main features of a dataset so you can understand what the data look like before modeling or inference. It organizes raw values into clear numerical summaries and visuals, without making probabilistic claims about a wider population. In analytics projects, this first pass helps you validate data quality, spot outliers, and communicate patterns to stakeholders.

What we typically summarize:

- Central tendency: mean, median, and mode capture a typical or “center” value
- Variability: range, variance, standard deviation, and interquartile range describe spread
- Distribution shape: skewness and kurtosis characterize symmetry, tails, and outliers
- Frequencies and percentiles: counts, proportions, quantiles (e.g., quartiles, deciles)

Common methods:

- Numerical methods: compute summary metrics and assemble frequency tables
- Graphical methods: histograms (continuous data), bar or pie charts (categorical data), box plots (median, quartiles, outliers), and scatter plots (bivariate relationships)

Business analytics context:

- For monthly revenue by region, the mean signals typical performance, the standard deviation shows volatility, a box plot quickly flags outliers, and a bar chart compares regions. These summaries guide prioritization (e.g., regions with high variability may require deeper investigation) and set baselines for forecasting and experimentation.

For an accessible overview of types, methods, and examples, see [ResearchMethod.net](https://researchmethod.net/descriptive-statistics/).

<!-- unfinished content
## Measures of centrality, dispersion, and concentration

xy

## Descriptive analytics 

* univariate data
* bivariate data
* multivariate data

## Techniques 

* constructing
* interpreting
* evaluating 
of scores, rankings, metrics, and composite indicators.

## Visualizing and exploration

* categorical
* numerical
* time series data

## Handling messy data

xy

## Association

* measuring the association of variables, including correlation and regression

## Implementing applications 

in the programming language R for practical data analysis.

\newpage
# Inferential statistics

xy

## Basic concepts of statistical inference

xy

## Quantification of probability through random variables

xy
-->

## Hypothesis testing

Hypothesis testing is a fundamental statistical method used to make inferences about population parameters based on sample data [@Illowsky2018]. It provides a systematic framework for evaluating claims about populations using sample evidence, enabling data-driven decision making in business contexts.

### Core Concepts

A statistical hypothesis test involves formulating two competing hypotheses:

- **Null hypothesis (H₀)**: The status quo or default position, typically representing no effect or no difference
- **Alternative hypothesis (H₁ or Hₐ)**: The research hypothesis representing the effect or difference we seek to detect

The process involves calculating a test statistic from sample data and comparing it to a critical value or determining a p-value to make decisions about rejecting or failing to reject the null hypothesis [@GeeksforGeeks2024].

### Key Components

**Test Statistics**: Standardized measures that quantify how far sample data deviates from what would be expected under the null hypothesis.

**Significance Level (α)**: The probability threshold for rejecting the null hypothesis, commonly set at 0.05 (5%).

**P-value**: The probability of observing test results at least as extreme as those obtained, assuming the null hypothesis is true.

**Critical Region**: The range of values for which the null hypothesis is rejected.

### Types of Errors

- **Type I Error (α)**: Rejecting a true null hypothesis (false positive)
- **Type II Error (β)**: Failing to reject a false null hypothesis (false negative)
- **Statistical Power (1-β)**: The probability of correctly rejecting a false null hypothesis

### Reference Materials

For comprehensive coverage of hypothesis testing concepts, methodologies, and applications, consult:

- **Theoretical Foundation**: [Introductory Statistics](./literature/Introductory%20Statistics.pdf) provides detailed explanations of hypothesis testing principles and procedures [@Illowsky2018]
- **Visual Guide**: [Hypothesis Testing Overview](./topics/Inferential%20statistics/Hypothesis%20testing/Hypothesis%20Testing.png) offers a visual representation of key concepts
- **Detailed Methodology**: [Hypothesis Testing Documentation](./topics/Inferential%20statistics/Hypothesis%20testing/Hypothesis%20Testing.pdf) contains comprehensive methodological information
- **Online Resource**: Additional perspectives on hypothesis testing applications can be found in the [GeeksforGeeks guide](https://www.geeksforgeeks.org/software-testing/understanding-hypothesis-testing/) [@GeeksforGeeks2024]

Understanding hypothesis testing is essential for making informed business decisions based on data analysis, forming the foundation for advanced statistical inference and predictive analytics in business contexts.

<!-- unfinished content
## Confidence intervals, p-values, and statistical tests

xy

## Inferential statistics 

in the programming language R, translating theoretical knowledge into practical applications.

\newpage
# Predictive analytics

xy

## Data mining techniques

xy

## Regression analysis

xy

## Forecasting in predicting future business outcomes

xy
-->

# Literature

All references for this course.

## Essential Readings

```{r essential_bib, results='asis', echo=FALSE, warning=FALSE}
source("literature/refmanager.r")
render_bib("literature/essential_readings.bib")
```

## Further Readings

```{r further_bib, results='asis', echo=FALSE, warning=FALSE}
source("literature/refmanager.r")
render_bib("literature/further_readings.bib")
```
